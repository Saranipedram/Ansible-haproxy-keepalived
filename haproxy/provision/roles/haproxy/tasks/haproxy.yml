---
- name: Install Dependency first (CentOs)
  yum:
    name={{ item }}
    state=installed
  vars:
    item:
    - openssl-devel
    - pcre-devel
    - make
    - gcc
    - socat
  when: ansible_os_family == "RedHat"

- name: Install Dependency first (Debian)
  apt: name={{ item }} state=installed
  with_items:
   - build-essential
   - zlib1g-dev
   - libpcre3-dev
   - libssl-dev
   - socat
  when: ansible_os_family == "Debian"

- name: Download Haproxy From Source
  get_url: >
    dest={{ haproxy_src_dir }}
    url={{ haproxy_download_url }}

- name: Extract Haproxy Source file
  shell: >
    tar xvf {{ haproxy_src_dir }}/haproxy-{{ haproxy_major_version }}.{{ haproxy_minor_version }}.tar.gz -C {{ haproxy_src_dir }}/
    creates={{ haproxy_src_dir }}/haproxy-{{ haproxy_major_version }}.{{ haproxy_minor_version }}

- name: Make and Make install Haproxy with Source
  shell: >
    cd {{ haproxy_src_dir }}/haproxy-{{ haproxy_major_version }}.{{ haproxy_minor_version }}  && make {{ haproxy_make_option }}  && make install
    creates=/usr/local/sbin/haproxy

- name: Set haproxy shell and user
  user:
    name={{ haproxy_user }}
    shell=/sbin/nologin

- name: Create Haproxy config and lib Directory
  file:
    path={{ item }}
    state=directory
    # vars:
    # item:
    # - /etc/haproxy
    # - /var/lib/haproxy
  with_items:
  - "/etc/haproxy"
  - "/var/lib/haproxy"

- name: Copy Haproxy exec fil to path
  shell: >
    cp /usr/local/sbin/{{ item }} /usr/sbin/{{ item }}
    creates=/usr/sbin/{{ item }}
  with_items:
    - haproxy
    #- haproxy-systemd-wrapper

- name: Copy haproxy Init file (RedHat)
  shell: >
    cp {{ haproxy_src_dir }}/haproxy-{{ haproxy_major_version }}.{{ haproxy_minor_version }}/examples/haproxy.init /etc/init.d/haproxy
    creates=/etc/init.d/haproxy
  when: ansible_os_family == "RedHat"

- name: Copy haproxy Init file (Debian)
  template: >
    src=templates/haproxy.debian.init
    dest=/etc/init.d/haproxy
  when: ansible_os_family == "Debian"

- name: haproxy default init set (Debian)
  template: >
    src=haproxy.debian.default
    dest=/etc/default/haproxy
  when: ansible_os_family == "Debian"

- name: Set permission for haproxy binary file
  file: >
    path=/etc/init.d/haproxy
    mode=0755

- name: Copy Haproxy config file
  template:
    src=haproxy.cfg.j2
    dest=/etc/haproxy/haproxy.cfg
  notify: restart haproxy

- name: Set Linux Kernel Parameters
  sysctl: >
    name=net.ipv4.ip_nonlocal_bind
    value=1
    state=present
    ignoreerrors=yes

- name: Start Haproxy Service
  service: >
    name=haproxy
    state=started
    enabled=yes
- name: Enable haproxy service
  systemd:
    name: haproxy
    enabled: yes
    masked: no
